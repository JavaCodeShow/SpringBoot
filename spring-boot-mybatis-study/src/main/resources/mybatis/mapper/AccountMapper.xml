<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jf.mybatis.mapper.AccountMapper">

    <sql id="Base_Column_List">
        id,money,name,is_deleted,create_time,update_time
    </sql>

    <!-- 根据id查询账户 -->
    <select id="findById" parameterType="String" resultType="com.jf.mybatis.domain.entity.AccountEntity">
        select
        <include refid="Base_Column_List"/>
        from account
        where id = #{id}
    </select>

    <insert id="insert" parameterType="com.jf.mybatis.domain.entity.AccountEntity">
        insert into account
            (id, money, name,is_deleted,create_time,update_time)
        values (#{id}, #{money}, #{name},#{isDeleted},#{createTime},#{updateTime})
    </insert>

    <update id="delete">
        update account set is_deleted = 1 where id = #{id}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.jf.mybatis.domain.entity.AccountEntity">
        update account
        set money = #{money},
            name  = #{name}
        where id = #{id}
    </update>

    <update id="updateMoneyById">
        update account
        set money = #{money}
        where id = #{id}
    </update>

    <update id="update">
        update account
        set money = #{money},
            name  = #{name}
        where id = #{id}
    </update>

    <!-- 根据id查询账户 -->
    <select id="getAccountByMoneyAndName" parameterType="com.jf.mybatis.domain.entity.AccountEntity"
            resultType="com.jf.mybatis.domain.entity.AccountEntity">
        select * from account
        <where>
            <if test="name != null and name != '' ">
                and name = #{name}
            </if>
            <if test="money != null and money !='' ">
                and money = #{money}
            </if>
        </where>
    </select>

    <!-- 根据moneys查询账户 -->
    <select id="getAccountByMoneys" parameterType="int" resultType="com.jf.mybatis.domain.entity.AccountEntity">
        select * from account
        <where>
            <foreach collection="array" item="money" open="money in (" close=")" separator=",">
                #{money}
            </foreach>
        </where>
    </select>
</mapper>
server:
  port: 8083
spring:
  application:
    name: mps-user
  profiles:
    active: dev
  cloud:
    nacos:
      discovery:
        namespace: dev
        server-addr: 172.31.128.22:8848
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driverClassName: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://172.31.128.22:3306/jfTest?useUnicode=true&characterEncoding=utf-8&autoReconnect=true&allowMultiQueries=true&useSSL=false&tinyInt1isBit=false&serverTimezone=GMT%2B8
    username: root
    password: mimazhaowoyao

# hystrix
hystrix:
  threadpool:
    default:
      coreSize: 16  # 默认使用CPU核数*2
      maximumSize: 48
      allowMaximumSizeToDivergeFromCoreSize: true # 允许动态扩展线程池中核心线程数到最大线程数，Greenwich下才生效
      maxQueueSize: 128  # 使用LinkedBlockingQueue，默认队列长度
      queueSizeRejectionThreshold: 128 # 拒绝阈值设置成跟队列长度一致
  command:
    default: # 通用的隔离策略配置
      execution:
        isolation:
          strategy: SEMAPHORE #选择 semaphore 配置
          semaphore:
            maxConcurrentRequests: 1000 #最大并发请求信号量，预留冗余
          thread:
            timeoutInMilliseconds: 10000 #线程池隔离模式下该参数无用处
      fallback:
        isolation:
          semaphore:
            maxConcurrentRequests: 1000 #最大并发fallback 消耗量， 预留冗余

# feign
feign:
  hystrix:
    enabled: true
  okhttp:
    enabled: true
# ribbon
ribbon:
  MaxAutoRetries: 0 # Max number of retries on the same server (excluding the first try)
  MaxAutoRetriesNextServer: 1 # Max number of next servers to retry (excluding the first server)
  OkToRetryOnAllOperations: false  # Whether all operations can be retried for this client
  ServerListRefreshInterval: 2000  # Interval to refresh the server list from the source
  ConnectTimeout: 1000  # Connect timeout used by Apache HttpClient
  ReadTimeout: 3000  # Read timeout used by Apache HttpClient


logging:
  config: classpath:logback-spring.xml

management:
  endpoints:
    web:
      exposure:
        include: '*'
mybatis:
  config-location: classpath:mybatis/mybatis-config.xml
  mapper-locations: classpath:mybatis/mapper/**/*Mapper.xml

# Seata配置
seata:
  application-id: ${spring.application.name}
  enabled: true
  enable-auto-data-source-proxy: true
  tx-service-group: default_tx_group
  # 指定事务分组至集群映射关系，集群名default需要与seata-server注册到Nacos的cluster保持一致
  service:
    vgroup-mapping:
      default_tx_group: default
  config:
    nacos:
      group: SEATA_GROUP
      namespace: seata
      server-addr: 172.31.128.22:8848
      username: nacos
      password: nacos
    type: nacos
  registry:
    type: nacos
    nacos:
      application: seata-server
      # nacos 服务地址
      server-addr: 172.31.128.22:8848
      namespace: seata
      group: SEATA_GROUP


